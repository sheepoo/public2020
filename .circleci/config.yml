version: 2.1
jobs:
  build:
    docker: # Executor タイプです。他に machine、macOS という実行タイプを指定できます
      - image: circleci/node:10 # プライマリコンテナです。このなかでジョブコマンドが実行されます      
    steps:
      - checkout
      - run: cat /etc/os-release

      # Install PowerShell
      # https://docs.microsoft.com/ja-jp/powershell/scripting/install/installing-powershell-core-on-linux?view=powershell-7#installation-via-package-repository---debian-9
      - run:
          command: |
            sudo apt-get update
            sudo apt-get install -y curl gnupg apt-transport-https
            curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-stretch-prod stretch main" > /etc/apt/sources.list.d/microsoft.list'
            sudo apt-get update
            sudo apt-get install -y powershell
            pwsh

      # Install .Net Core
      # https://docs.microsoft.com/ja-jp/dotnet/core/install/linux-debian
      #- run:
      #    command: |




      # Install NuGet
      - run: sudo apt install nuget
      #- run: NuGet help
      # Add the Mono repository to your system
      #- run:
      #    command: |
      #      sudo apt install gnupg ca-certificates
      #      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
      #      echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
      #      sudo apt update
      # install Mono
      #- run:
      #    command: |
      #      sudo apt-get install mono-devel
      #- run: mono --version
      # test Mono
      #- run: csharp -e 'new System.Net.WebClient ().DownloadString ("https://www.nuget.org")'

      # install SharePoint and Project Client Object Model libraries
      # https://www.powershellgallery.com/packages/SharePointOnline.CSOM/0.1.0
      - run: nuget install Microsoft.SharePointOnline.CSOM -OutputDirectory packages
      
      # upload files to SharePoint Document Library
      - run:
          command: ./spLibUpload.ps1 -url https://spkuratest.sharepoint.com -library "テスト用ライブラリ" -username $USERNAME -password $PASSWORD -path ./javascript/files
          working_directory: ./javascript/tools


      - run: npm install typescript
      - sonarcloud/scan
      #- run: echo "hello world"
      #- run: jq --version
      - run:
          command: |
            STATUS=$(curl -u "${SONAR_TOKEN}:" https://sonarcloud.io/api/qualitygates/project_status?projectKey=kura2020_public2020 | jq -r '.projectStatus.status')
            echo "Status of SonarQube task is ${STATUS} "
            if [ "${STATUS}" != "OK" ]; then
                echo "Quality gate is not OK - exiting with error"
                exit 1
            fi
      
      # Download and cache dependencies
      - run: 
          command: npm install
          working_directory: ./helloworld-webpart
      
      - run: sudo npm link gulp

      # - save_cache:
      #    paths:
      #      - node_modules
      #    key: v1-dependencies-{{ checksum "package.json" }}
      #    working_directory: ./helloworld-webpart

      # run gulp
      - run: mkdir /tmp/artifacts
      
      - run: 
          command: gulp bundle --ship
          working_directory: ./helloworld-webpart
      - run: 
          command: gulp package-solution --ship
          working_directory: ./helloworld-webpart

      - store_artifacts:
          path: ./helloworld-webpart/sharepoint/solution/helloworld-webpart.sppkg
          
      # ここから Sharepointにデプロイ
      # o365 コマンドツールのインストール
      - run:
          command: npm install @pnp/office365-cli
          working_directory: ./helloworld-webpart
      
      - run: sudo npm link @pnp/office365-cli
      
      # ログイン・デプロイを実行
      - run:
          command: o365 login -t password -u $USERNAME -p $PASSWORD
      
      - run:
          command: o365 spo app add -p ./helloworld-webpart/sharepoint/solution/helloworld-webpart.sppkg --overwrite
      - run:
          command: o365 spo app deploy --name helloworld-webpart.sppkg

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.1
workflows:
  main:
    jobs:
      - build:
          context: SonarCloud
          filters:
            branches:
              only: test-linux